import typing

Endpoint = typing.Tuple[str, int]

def log_to(__path: str) -> None: ...
def configure(
    __properties: typing.Union[dict[str, typing.Any], None] = ..., **kwargs: typing.Any
) -> None: ...
def listen(__endpoint: typing.Union[Endpoint, int]) -> Endpoint: ...
def connect(
    __endpoint: typing.Union[Endpoint, int],
    *,
    access_token: typing.Union[str, None] = ...
) -> Endpoint: ...
def wait_for_client() -> None: ...
def is_client_connected() -> bool: ...
def breakpoint() -> None: ...
def debug_this_thread() -> None: ...
def trace_this_thread(__should_trace: bool) -> None: ...
